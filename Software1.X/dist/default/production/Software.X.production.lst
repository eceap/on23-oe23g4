

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Sep 19 15:46:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Version 2.40
    22                           ; Generated 04/07/2022 GMT
    23                           ; 
    24                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     008F                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0095                     	;# 
   109     0096                     	;# 
   110     0097                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009A                     	;# 
   114     009B                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     0105                     	;# 
   120     0107                     	;# 
   121     0108                     	;# 
   122     0109                     	;# 
   123     010C                     	;# 
   124     010C                     	;# 
   125     010D                     	;# 
   126     010E                     	;# 
   127     010F                     	;# 
   128     0185                     	;# 
   129     0187                     	;# 
   130     0188                     	;# 
   131     0189                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     0000                     	;# 
   135     0001                     	;# 
   136     0002                     	;# 
   137     0003                     	;# 
   138     0004                     	;# 
   139     0005                     	;# 
   140     0006                     	;# 
   141     0007                     	;# 
   142     0008                     	;# 
   143     0009                     	;# 
   144     000A                     	;# 
   145     000B                     	;# 
   146     000C                     	;# 
   147     000D                     	;# 
   148     000E                     	;# 
   149     000E                     	;# 
   150     000F                     	;# 
   151     0010                     	;# 
   152     0011                     	;# 
   153     0012                     	;# 
   154     0013                     	;# 
   155     0014                     	;# 
   156     0015                     	;# 
   157     0015                     	;# 
   158     0016                     	;# 
   159     0017                     	;# 
   160     0018                     	;# 
   161     0019                     	;# 
   162     001A                     	;# 
   163     001B                     	;# 
   164     001B                     	;# 
   165     001C                     	;# 
   166     001D                     	;# 
   167     001E                     	;# 
   168     001F                     	;# 
   169     0081                     	;# 
   170     0085                     	;# 
   171     0086                     	;# 
   172     0087                     	;# 
   173     0088                     	;# 
   174     0089                     	;# 
   175     008C                     	;# 
   176     008D                     	;# 
   177     008E                     	;# 
   178     008F                     	;# 
   179     0090                     	;# 
   180     0091                     	;# 
   181     0092                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0093                     	;# 
   185     0094                     	;# 
   186     0095                     	;# 
   187     0096                     	;# 
   188     0097                     	;# 
   189     0098                     	;# 
   190     0099                     	;# 
   191     009A                     	;# 
   192     009B                     	;# 
   193     009C                     	;# 
   194     009D                     	;# 
   195     009E                     	;# 
   196     009F                     	;# 
   197     0105                     	;# 
   198     0107                     	;# 
   199     0108                     	;# 
   200     0109                     	;# 
   201     010C                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     0185                     	;# 
   207     0187                     	;# 
   208     0188                     	;# 
   209     0189                     	;# 
   210     018C                     	;# 
   211     018D                     	;# 
   212     0000                     	;# 
   213     0001                     	;# 
   214     0002                     	;# 
   215     0003                     	;# 
   216     0004                     	;# 
   217     0005                     	;# 
   218     0006                     	;# 
   219     0007                     	;# 
   220     0008                     	;# 
   221     0009                     	;# 
   222     000A                     	;# 
   223     000B                     	;# 
   224     000C                     	;# 
   225     000D                     	;# 
   226     000E                     	;# 
   227     000E                     	;# 
   228     000F                     	;# 
   229     0010                     	;# 
   230     0011                     	;# 
   231     0012                     	;# 
   232     0013                     	;# 
   233     0014                     	;# 
   234     0015                     	;# 
   235     0015                     	;# 
   236     0016                     	;# 
   237     0017                     	;# 
   238     0018                     	;# 
   239     0019                     	;# 
   240     001A                     	;# 
   241     001B                     	;# 
   242     001B                     	;# 
   243     001C                     	;# 
   244     001D                     	;# 
   245     001E                     	;# 
   246     001F                     	;# 
   247     0081                     	;# 
   248     0085                     	;# 
   249     0086                     	;# 
   250     0087                     	;# 
   251     0088                     	;# 
   252     0089                     	;# 
   253     008C                     	;# 
   254     008D                     	;# 
   255     008E                     	;# 
   256     008F                     	;# 
   257     0090                     	;# 
   258     0091                     	;# 
   259     0092                     	;# 
   260     0093                     	;# 
   261     0093                     	;# 
   262     0093                     	;# 
   263     0094                     	;# 
   264     0095                     	;# 
   265     0096                     	;# 
   266     0097                     	;# 
   267     0098                     	;# 
   268     0099                     	;# 
   269     009A                     	;# 
   270     009B                     	;# 
   271     009C                     	;# 
   272     009D                     	;# 
   273     009E                     	;# 
   274     009F                     	;# 
   275     0105                     	;# 
   276     0107                     	;# 
   277     0108                     	;# 
   278     0109                     	;# 
   279     010C                     	;# 
   280     010C                     	;# 
   281     010D                     	;# 
   282     010E                     	;# 
   283     010F                     	;# 
   284     0185                     	;# 
   285     0187                     	;# 
   286     0188                     	;# 
   287     0189                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     0000                     	;# 
   291     0001                     	;# 
   292     0002                     	;# 
   293     0003                     	;# 
   294     0004                     	;# 
   295     0005                     	;# 
   296     0006                     	;# 
   297     0007                     	;# 
   298     0008                     	;# 
   299     0009                     	;# 
   300     000A                     	;# 
   301     000B                     	;# 
   302     000C                     	;# 
   303     000D                     	;# 
   304     000E                     	;# 
   305     000E                     	;# 
   306     000F                     	;# 
   307     0010                     	;# 
   308     0011                     	;# 
   309     0012                     	;# 
   310     0013                     	;# 
   311     0014                     	;# 
   312     0015                     	;# 
   313     0015                     	;# 
   314     0016                     	;# 
   315     0017                     	;# 
   316     0018                     	;# 
   317     0019                     	;# 
   318     001A                     	;# 
   319     001B                     	;# 
   320     001B                     	;# 
   321     001C                     	;# 
   322     001D                     	;# 
   323     001E                     	;# 
   324     001F                     	;# 
   325     0081                     	;# 
   326     0085                     	;# 
   327     0086                     	;# 
   328     0087                     	;# 
   329     0088                     	;# 
   330     0089                     	;# 
   331     008C                     	;# 
   332     008D                     	;# 
   333     008E                     	;# 
   334     008F                     	;# 
   335     0090                     	;# 
   336     0091                     	;# 
   337     0092                     	;# 
   338     0093                     	;# 
   339     0093                     	;# 
   340     0093                     	;# 
   341     0094                     	;# 
   342     0095                     	;# 
   343     0096                     	;# 
   344     0097                     	;# 
   345     0098                     	;# 
   346     0099                     	;# 
   347     009A                     	;# 
   348     009B                     	;# 
   349     009C                     	;# 
   350     009D                     	;# 
   351     009E                     	;# 
   352     009F                     	;# 
   353     0105                     	;# 
   354     0107                     	;# 
   355     0108                     	;# 
   356     0109                     	;# 
   357     010C                     	;# 
   358     010C                     	;# 
   359     010D                     	;# 
   360     010E                     	;# 
   361     010F                     	;# 
   362     0185                     	;# 
   363     0187                     	;# 
   364     0188                     	;# 
   365     0189                     	;# 
   366     018C                     	;# 
   367     018D                     	;# 
   368     0000                     	;# 
   369     0001                     	;# 
   370     0002                     	;# 
   371     0003                     	;# 
   372     0004                     	;# 
   373     0005                     	;# 
   374     0006                     	;# 
   375     0007                     	;# 
   376     0008                     	;# 
   377     0009                     	;# 
   378     000A                     	;# 
   379     000B                     	;# 
   380     000C                     	;# 
   381     000D                     	;# 
   382     000E                     	;# 
   383     000E                     	;# 
   384     000F                     	;# 
   385     0010                     	;# 
   386     0011                     	;# 
   387     0012                     	;# 
   388     0013                     	;# 
   389     0014                     	;# 
   390     0015                     	;# 
   391     0015                     	;# 
   392     0016                     	;# 
   393     0017                     	;# 
   394     0018                     	;# 
   395     0019                     	;# 
   396     001A                     	;# 
   397     001B                     	;# 
   398     001B                     	;# 
   399     001C                     	;# 
   400     001D                     	;# 
   401     001E                     	;# 
   402     001F                     	;# 
   403     0081                     	;# 
   404     0085                     	;# 
   405     0086                     	;# 
   406     0087                     	;# 
   407     0088                     	;# 
   408     0089                     	;# 
   409     008C                     	;# 
   410     008D                     	;# 
   411     008E                     	;# 
   412     008F                     	;# 
   413     0090                     	;# 
   414     0091                     	;# 
   415     0092                     	;# 
   416     0093                     	;# 
   417     0093                     	;# 
   418     0093                     	;# 
   419     0094                     	;# 
   420     0095                     	;# 
   421     0096                     	;# 
   422     0097                     	;# 
   423     0098                     	;# 
   424     0099                     	;# 
   425     009A                     	;# 
   426     009B                     	;# 
   427     009C                     	;# 
   428     009D                     	;# 
   429     009E                     	;# 
   430     009F                     	;# 
   431     0105                     	;# 
   432     0107                     	;# 
   433     0108                     	;# 
   434     0109                     	;# 
   435     010C                     	;# 
   436     010C                     	;# 
   437     010D                     	;# 
   438     010E                     	;# 
   439     010F                     	;# 
   440     0185                     	;# 
   441     0187                     	;# 
   442     0188                     	;# 
   443     0189                     	;# 
   444     018C                     	;# 
   445     018D                     	;# 
   446     0000                     	;# 
   447     0001                     	;# 
   448     0002                     	;# 
   449     0003                     	;# 
   450     0004                     	;# 
   451     0005                     	;# 
   452     0006                     	;# 
   453     0007                     	;# 
   454     0008                     	;# 
   455     0009                     	;# 
   456     000A                     	;# 
   457     000B                     	;# 
   458     000C                     	;# 
   459     000D                     	;# 
   460     000E                     	;# 
   461     000E                     	;# 
   462     000F                     	;# 
   463     0010                     	;# 
   464     0011                     	;# 
   465     0012                     	;# 
   466     0013                     	;# 
   467     0014                     	;# 
   468     0015                     	;# 
   469     0015                     	;# 
   470     0016                     	;# 
   471     0017                     	;# 
   472     0018                     	;# 
   473     0019                     	;# 
   474     001A                     	;# 
   475     001B                     	;# 
   476     001B                     	;# 
   477     001C                     	;# 
   478     001D                     	;# 
   479     001E                     	;# 
   480     001F                     	;# 
   481     0081                     	;# 
   482     0085                     	;# 
   483     0086                     	;# 
   484     0087                     	;# 
   485     0088                     	;# 
   486     0089                     	;# 
   487     008C                     	;# 
   488     008D                     	;# 
   489     008E                     	;# 
   490     008F                     	;# 
   491     0090                     	;# 
   492     0091                     	;# 
   493     0092                     	;# 
   494     0093                     	;# 
   495     0093                     	;# 
   496     0093                     	;# 
   497     0094                     	;# 
   498     0095                     	;# 
   499     0096                     	;# 
   500     0097                     	;# 
   501     0098                     	;# 
   502     0099                     	;# 
   503     009A                     	;# 
   504     009B                     	;# 
   505     009C                     	;# 
   506     009D                     	;# 
   507     009E                     	;# 
   508     009F                     	;# 
   509     0105                     	;# 
   510     0107                     	;# 
   511     0108                     	;# 
   512     0109                     	;# 
   513     010C                     	;# 
   514     010C                     	;# 
   515     010D                     	;# 
   516     010E                     	;# 
   517     010F                     	;# 
   518     0185                     	;# 
   519     0187                     	;# 
   520     0188                     	;# 
   521     0189                     	;# 
   522     018C                     	;# 
   523     018D                     	;# 
   524     0005                     _PORTAbits	set	5
   525     0007                     _PORTCbits	set	7
   526     0001                     _TMR0	set	1
   527     001E                     _ADRESH	set	30
   528     001F                     _ADCON0bits	set	31
   529     005F                     _GIE	set	95
   530     005D                     _TMR0IE	set	93
   531     005A                     _TMR0IF	set	90
   532     00F9                     _GO_nDONE	set	249
   533     00F8                     _ADON	set	248
   534     00FF                     _ADCS1	set	255
   535     00FE                     _ADCS0	set	254
   536     0085                     _TRISAbits	set	133
   537     0087                     _TRISCbits	set	135
   538     0081                     _OPTION_REGbits	set	129
   539     009E                     _ADRESL	set	158
   540     0462                     _CCP1IE	set	1122
   541     040B                     _PSA	set	1035
   542     040D                     _T0CS	set	1037
   543     04FC                     _VCFG0	set	1276
   544     04FD                     _VCFG1	set	1277
   545     04FF                     _ADFM	set	1279
   546     0189                     _ANSELH	set	393
   547     0188                     _ANSEL	set	392
   548     0C40                     _ANS0	set	3136
   549     0C28                     _FVREN	set	3112
   550                           
   551                           	psect	cinit
   552     000F                     start_initialization:	
   553                           ; #config settings
   554                           
   555     000F                     __initialization:
   556                           
   557                           ; Clear objects allocated to COMMON
   558     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   559     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   560     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   561     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   562     0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   563                           
   564                           ; Clear objects allocated to BANK0
   565     0014  1283               	bcf	3,5	;RP0=0, select bank0
   566     0015  1303               	bcf	3,6	;RP1=0, select bank0
   567     0016  01A0               	clrf	__pbssBANK0& (0+127)
   568     0017  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   569     0018  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   570     0019  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   571     001A                     end_of_initialization:	
   572                           ;End of C runtime variable initialization code
   573                           
   574     001A                     __end_of__initialization:
   575     001A  0183               	clrf	3
   576     001B  120A  118A  290F   	ljmp	_main	;jump to C main() function
   577                           
   578                           	psect	bssCOMMON
   579     0070                     __pbssCOMMON:
   580     0070                     _error:
   581     0070                     	ds	1
   582     0071                     _estadoActual:
   583     0071                     	ds	1
   584     0072                     _contador50HZ:
   585     0072                     	ds	1
   586     0073                     adcRead_mV@nAdcRef:
   587     0073                     	ds	2
   588                           
   589                           	psect	bssBANK0
   590     0020                     __pbssBANK0:
   591     0020                     _tInicio:
   592     0020                     	ds	2
   593     0022                     _tickCounter:
   594     0022                     	ds	2
   595                           
   596                           	psect	cstackCOMMON
   597     0075                     __pcstackCOMMON:
   598     0075                     ?_appInit:
   599     0075                     ?_InicializarMEF:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0075                     ?_ActualizarMEF:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0075                     ?_adcInit:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0075                     ?_isr:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0075                     ??_isr:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0075                     ?_main:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0075                     ?_tickInit:	
   618                           ; 1 bytes @ 0x0
   619                           
   620                           
   621                           ; 1 bytes @ 0x0
   622     0075                     	ds	3
   623     0078                     ??_appInit:
   624     0078                     ??_adcInit:	
   625                           ; 1 bytes @ 0x3
   626                           
   627     0078                     ??_tickInit:	
   628                           ; 1 bytes @ 0x3
   629                           
   630     0078                     ?_tickRead:	
   631                           ; 1 bytes @ 0x3
   632                           
   633                           
   634                           ; 2 bytes @ 0x3
   635     0078                     	ds	2
   636     007A                     ??_InicializarMEF:
   637     007A                     ??_tickRead:	
   638                           ; 1 bytes @ 0x5
   639                           
   640     007A                     ??_main:	
   641                           ; 1 bytes @ 0x5
   642                           
   643                           
   644                           	psect	cstackBANK0
   645     0024                     __pcstackBANK0:	
   646                           ; 1 bytes @ 0x5
   647                           
   648     0024                     tickRead@aux:
   649                           
   650                           ; 2 bytes @ 0x0
   651     0024                     	ds	2
   652     0026                     ??_ActualizarMEF:
   653                           
   654                           ; 1 bytes @ 0x2
   655     0026                     	ds	2
   656                           
   657                           	psect	maintext
   658     010F                     __pmaintext:	
   659 ;;
   660 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   661 ;;
   662 ;; *************** function _main *****************
   663 ;; Defined at:
   664 ;;		line 40 in file "main.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      void 
   671 ;; Registers used:
   672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   673 ;; Tracked objects:
   674 ;;		On entry : B00/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   678 ;;      Params:         0       0       0       0       0
   679 ;;      Locals:         0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0
   681 ;;      Totals:         0       0       0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels required when called: 3
   684 ;; This function calls:
   685 ;;		_ActualizarMEF
   686 ;;		_InicializarMEF
   687 ;;		_appInit
   688 ;; This function is called by:
   689 ;;		Startup code after reset
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693     010F                     _main:	
   694                           ;psect for function _main
   695                           
   696     010F                     l1064:	
   697                           ;incstack = 0
   698                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   699                           
   700                           
   701                           ;main.c: 41:     appInit();
   702     010F  120A  118A  20E5  120A  118A  	fcall	_appInit
   703                           
   704                           ;main.c: 42:     InicializarMEF();
   705     0114  120A  118A  213C  120A  118A  	fcall	_InicializarMEF
   706     0119                     l1066:
   707                           
   708                           ;main.c: 43:     PORTCbits.RC2 = 0;
   709     0119  1283               	bcf	3,5	;RP0=0, select bank0
   710     011A  1303               	bcf	3,6	;RP1=0, select bank0
   711     011B  1107               	bcf	7,2	;volatile
   712     011C                     l1068:
   713                           
   714                           ;main.c: 44:     PORTCbits.RC3 = 0;
   715     011C  1187               	bcf	7,3	;volatile
   716     011D                     l1070:
   717                           
   718                           ;main.c: 45:     PORTCbits.RC4 = 0;
   719     011D  1207               	bcf	7,4	;volatile
   720     011E                     l1072:
   721                           
   722                           ;main.c: 46:     PORTCbits.RC5 = 0;
   723     011E  1287               	bcf	7,5	;volatile
   724     011F                     l1074:
   725                           
   726                           ;main.c: 47:     PORTCbits.RC6 = 0;
   727     011F  1307               	bcf	7,6	;volatile
   728     0120                     l1076:
   729                           
   730                           ;main.c: 49:         ActualizarMEF();
   731     0120  120A  118A  201E  120A  118A  	fcall	_ActualizarMEF
   732     0125  2920               	goto	l1076
   733     0126  120A  118A  280C   	ljmp	start
   734     0129                     __end_of_main:
   735                           
   736                           	psect	text1
   737     00E5                     __ptext1:	
   738 ;; *************** function _appInit *****************
   739 ;; Defined at:
   740 ;;		line 42 in file "user.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, status,2, status,0, pclath, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0
   756 ;;      Temps:          2       0       0       0       0
   757 ;;      Totals:         2       0       0       0       0
   758 ;;Total ram usage:        2 bytes
   759 ;; Hardware stack levels used: 1
   760 ;; Hardware stack levels required when called: 2
   761 ;; This function calls:
   762 ;;		_adcInit
   763 ;;		_tickInit
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769     00E5                     _appInit:	
   770                           ;psect for function _appInit
   771                           
   772     00E5                     l760:	
   773                           ;incstack = 0
   774                           ; Regs used in _appInit: [wreg+status,2+status,0+pclath+cstack]
   775                           
   776                           
   777                           ;user.c: 46:     ANSEL = 0;
   778     00E5  1683               	bsf	3,5	;RP0=1, select bank3
   779     00E6  1703               	bsf	3,6	;RP1=1, select bank3
   780     00E7  0188               	clrf	8	;volatile
   781                           
   782                           ;user.c: 47:     ANSELH = 0;
   783     00E8  0189               	clrf	9	;volatile
   784     00E9                     l762:
   785                           
   786                           ;user.c: 48:     TRISCbits.TRISC2 = 0;
   787     00E9  1683               	bsf	3,5	;RP0=1, select bank1
   788     00EA  1303               	bcf	3,6	;RP1=0, select bank1
   789     00EB  1107               	bcf	7,2	;volatile
   790     00EC                     l764:
   791                           
   792                           ;user.c: 49:     TRISCbits.TRISC3 = 0;
   793     00EC  1187               	bcf	7,3	;volatile
   794     00ED                     l766:
   795                           
   796                           ;user.c: 50:     TRISCbits.TRISC4 = 0;
   797     00ED  1207               	bcf	7,4	;volatile
   798     00EE                     l768:
   799                           
   800                           ;user.c: 51:     TRISCbits.TRISC5 = 0;
   801     00EE  1287               	bcf	7,5	;volatile
   802     00EF                     l770:
   803                           
   804                           ;user.c: 52:     TRISCbits.TRISC6 = 0;
   805     00EF  1307               	bcf	7,6	;volatile
   806     00F0                     l772:
   807                           
   808                           ;user.c: 53:     TRISAbits.TRISA0 = 1;
   809     00F0  1405               	bsf	5,0	;volatile
   810     00F1                     l774:
   811                           
   812                           ;user.c: 54:     TRISAbits.TRISA6 = 1;
   813     00F1  1705               	bsf	5,6	;volatile
   814     00F2                     l776:
   815                           
   816                           ;user.c: 55:     TRISAbits.TRISA5 = 1;
   817     00F2  1685               	bsf	5,5	;volatile
   818     00F3                     l778:
   819                           
   820                           ;user.c: 56:     TRISAbits.TRISA7 = 1;
   821     00F3  1785               	bsf	5,7	;volatile
   822     00F4                     l780:
   823                           
   824                           ;user.c: 57:     TRISCbits.TRISC7 = 0;
   825     00F4  1387               	bcf	7,7	;volatile
   826     00F5                     l782:
   827                           
   828                           ;user.c: 58:     TRISCbits.TRISC0 = 0;
   829     00F5  1007               	bcf	7,0	;volatile
   830     00F6                     l784:
   831                           
   832                           ;user.c: 59:     TRISCbits.TRISC1 = 0;
   833     00F6  1087               	bcf	7,1	;volatile
   834     00F7                     l786:
   835                           
   836                           ;user.c: 60:     adcInit();
   837     00F7  120A  118A  2129  120A  118A  	fcall	_adcInit
   838     00FC                     l788:
   839                           
   840                           ;user.c: 61:     tickInit();
   841     00FC  120A  118A  2156  120A  118A  	fcall	_tickInit
   842     0101                     l790:
   843                           
   844                           ;user.c: 62:     _delay((unsigned long)((100)*(4000000L/4000.0)));
   845     0101  3082               	movlw	130
   846     0102  00F9               	movwf	??_appInit+1
   847     0103  30DD               	movlw	221
   848     0104  00F8               	movwf	??_appInit
   849     0105                     u437:
   850     0105  0BF8               	decfsz	??_appInit,f
   851     0106  2905               	goto	u437
   852     0107  0BF9               	decfsz	??_appInit+1,f
   853     0108  2905               	goto	u437
   854     0109  290A               	nop2
   855     010A                     l792:
   856                           
   857                           ;user.c: 65:     CCP1IE = 1;
   858     010A  1683               	bsf	3,5	;RP0=1, select bank1
   859     010B  1303               	bcf	3,6	;RP1=0, select bank1
   860     010C  150C               	bsf	12,2	;volatile
   861     010D                     l794:
   862                           
   863                           ;user.c: 67:     GIE = 1;
   864     010D  178B               	bsf	11,7	;volatile
   865     010E                     l144:
   866     010E  0008               	return
   867     010F                     __end_of_appInit:
   868                           
   869                           	psect	text2
   870     0156                     __ptext2:	
   871 ;; *************** function _tickInit *****************
   872 ;; Defined at:
   873 ;;		line 40 in file "tick.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0
   890 ;;      Totals:         0       0       0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used: 1
   893 ;; Hardware stack levels required when called: 1
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_appInit
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901     0156                     _tickInit:	
   902                           ;psect for function _tickInit
   903                           
   904     0156                     l744:	
   905                           ;incstack = 0
   906                           ; Regs used in _tickInit: [wreg+status,2+status,0]
   907                           
   908                           
   909                           ;tick.c: 42:     T0CS = 0;
   910     0156  1683               	bsf	3,5	;RP0=1, select bank1
   911     0157  1303               	bcf	3,6	;RP1=0, select bank1
   912     0158  1281               	bcf	1,5	;volatile
   913                           
   914                           ;tick.c: 43:     PSA = 0;
   915     0159  1181               	bcf	1,3	;volatile
   916     015A                     l746:
   917                           
   918                           ;tick.c: 46:     OPTION_REGbits.PS = 1;
   919     015A  0801               	movf	1,w	;volatile
   920     015B  39F8               	andlw	-8
   921     015C  3801               	iorlw	1
   922     015D  0081               	movwf	1	;volatile
   923     015E                     l748:
   924                           
   925                           ;tick.c: 55:     TMR0IE = 1;
   926     015E  168B               	bsf	11,5	;volatile
   927     015F                     l117:
   928     015F  0008               	return
   929     0160                     __end_of_tickInit:
   930                           
   931                           	psect	text3
   932     0129                     __ptext3:	
   933 ;; *************** function _adcInit *****************
   934 ;; Defined at:
   935 ;;		line 35 in file "adc.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		None
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       0       0       0       0
   950 ;;      Locals:         0       0       0       0       0
   951 ;;      Temps:          0       0       0       0       0
   952 ;;      Totals:         0       0       0       0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels used: 1
   955 ;; Hardware stack levels required when called: 1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_appInit
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963     0129                     _adcInit:	
   964                           ;psect for function _adcInit
   965                           
   966     0129                     l736:	
   967                           ;incstack = 0
   968                           ; Regs used in _adcInit: []
   969                           
   970                           
   971                           ;adc.c: 37:     FVREN = 1;
   972     0129  1683               	bsf	3,5	;RP0=1, select bank3
   973     012A  1703               	bsf	3,6	;RP1=1, select bank3
   974     012B  1405               	bsf	5,0	;volatile
   975                           
   976                           ;adc.c: 38:     ADFM = 1;
   977     012C  1683               	bsf	3,5	;RP0=1, select bank1
   978     012D  1303               	bcf	3,6	;RP1=0, select bank1
   979     012E  179F               	bsf	31,7	;volatile
   980                           
   981                           ;adc.c: 39:     VCFG1 = 0;
   982     012F  129F               	bcf	31,5	;volatile
   983                           
   984                           ;adc.c: 40:     VCFG0 = 0;
   985     0130  121F               	bcf	31,4	;volatile
   986                           
   987                           ;adc.c: 41:     ADCS0 = 1;
   988     0131  1283               	bcf	3,5	;RP0=0, select bank0
   989     0132  1303               	bcf	3,6	;RP1=0, select bank0
   990     0133  171F               	bsf	31,6	;volatile
   991                           
   992                           ;adc.c: 42:     ADCS1 = 1;
   993     0134  179F               	bsf	31,7	;volatile
   994                           
   995                           ;adc.c: 43:     ANS0 = 1;
   996     0135  1683               	bsf	3,5	;RP0=1, select bank3
   997     0136  1703               	bsf	3,6	;RP1=1, select bank3
   998     0137  1408               	bsf	8,0	;volatile
   999                           
  1000                           ;adc.c: 44:     ADON = 1;
  1001     0138  1283               	bcf	3,5	;RP0=0, select bank0
  1002     0139  1303               	bcf	3,6	;RP1=0, select bank0
  1003     013A  141F               	bsf	31,0	;volatile
  1004     013B                     l29:
  1005     013B  0008               	return
  1006     013C                     __end_of_adcInit:
  1007                           
  1008                           	psect	text4
  1009     013C                     __ptext4:	
  1010 ;; *************** function _InicializarMEF *****************
  1011 ;; Defined at:
  1012 ;;		line 111 in file "main.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0
  1029 ;;      Totals:         0       0       0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; Hardware stack levels required when called: 2
  1033 ;; This function calls:
  1034 ;;		_tickRead
  1035 ;; This function is called by:
  1036 ;;		_main
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040     013C                     _InicializarMEF:	
  1041                           ;psect for function _InicializarMEF
  1042                           
  1043     013C                     l1018:	
  1044                           ;incstack = 0
  1045                           ; Regs used in _InicializarMEF: [wreg+status,2+pclath+cstack]
  1046                           
  1047                           
  1048                           ;main.c: 112:     estadoActual = E_INICIALIZACION;
  1049     013C  01F1               	clrf	_estadoActual
  1050     013D                     l1020:
  1051                           
  1052                           ;main.c: 113:     tInicio = tickRead();
  1053     013D  120A  118A  2149  120A  118A  	fcall	_tickRead
  1054     0142  0879               	movf	?_tickRead+1,w
  1055     0143  1283               	bcf	3,5	;RP0=0, select bank0
  1056     0144  1303               	bcf	3,6	;RP1=0, select bank0
  1057     0145  00A1               	movwf	_tInicio+1
  1058     0146  0878               	movf	?_tickRead,w
  1059     0147  00A0               	movwf	_tInicio
  1060     0148                     l87:
  1061     0148  0008               	return
  1062     0149                     __end_of_InicializarMEF:
  1063                           
  1064                           	psect	text5
  1065     001E                     __ptext5:	
  1066 ;; *************** function _ActualizarMEF *****************
  1067 ;; Defined at:
  1068 ;;		line 116 in file "main.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1082 ;;      Params:         0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0
  1084 ;;      Temps:          0       2       0       0       0
  1085 ;;      Totals:         0       2       0       0       0
  1086 ;;Total ram usage:        2 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; Hardware stack levels required when called: 2
  1089 ;; This function calls:
  1090 ;;		_tickRead
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096     001E                     _ActualizarMEF:	
  1097                           ;psect for function _ActualizarMEF
  1098                           
  1099     001E                     l1022:	
  1100                           ;incstack = 0
  1101                           ; Regs used in _ActualizarMEF: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1102                           
  1103                           
  1104                           ;main.c: 117:     switch(estadoActual){
  1105     001E  2896               	goto	l1058
  1106     001F                     l91:	
  1107                           ;main.c: 118:         case E_INICIALIZACION:
  1108                           
  1109                           
  1110                           ;main.c: 119:             if(PORTAbits.RA0 == 1 && PORTAbits.RA6 == 1){
  1111     001F  1C05               	btfss	5,0	;volatile
  1112     0020  2822               	goto	u331
  1113     0021  2823               	goto	u330
  1114     0022                     u331:
  1115     0022  282A               	goto	l1028
  1116     0023                     u330:
  1117     0023                     l1024:
  1118     0023  1F05               	btfss	5,6	;volatile
  1119     0024  2826               	goto	u341
  1120     0025  2827               	goto	u340
  1121     0026                     u341:
  1122     0026  282A               	goto	l1028
  1123     0027                     u340:
  1124     0027                     l1026:
  1125                           
  1126                           ;main.c: 120:                 PORTCbits.RC2 = 1;
  1127     0027  1507               	bsf	7,2	;volatile
  1128                           
  1129                           ;main.c: 121:                 estadoActual = E_FUNCIONANDO;
  1130     0028  01F1               	clrf	_estadoActual
  1131     0029  0AF1               	incf	_estadoActual,f
  1132     002A                     l1028:
  1133                           
  1134                           ;main.c: 123:             if(tickRead() >= tInicio){
  1135     002A  120A  118A  2149  120A  118A  	fcall	_tickRead
  1136     002F  1283               	bcf	3,5	;RP0=0, select bank0
  1137     0030  1303               	bcf	3,6	;RP1=0, select bank0
  1138     0031  0821               	movf	_tInicio+1,w
  1139     0032  0279               	subwf	?_tickRead+1,w
  1140     0033  1D03               	skipz
  1141     0034  2837               	goto	u355
  1142     0035  0820               	movf	_tInicio,w
  1143     0036  0278               	subwf	?_tickRead,w
  1144     0037                     u355:
  1145     0037  1C03               	skipc
  1146     0038  283A               	goto	u351
  1147     0039  283B               	goto	u350
  1148     003A                     u351:
  1149     003A  28AB               	goto	l102
  1150     003B                     u350:
  1151     003B                     l1030:
  1152                           
  1153                           ;main.c: 124:                 PORTCbits.RC2 = !PORTCbits.RC2;
  1154     003B  1003               	clrc
  1155     003C  1D07               	btfss	7,2	;volatile
  1156     003D  1403               	setc
  1157     003E  1803               	btfsc	3,0
  1158     003F  2841               	goto	u361
  1159     0040  2845               	goto	u360
  1160     0041                     u361:
  1161     0041  1283               	bcf	3,5	;RP0=0, select bank0
  1162     0042  1303               	bcf	3,6	;RP1=0, select bank0
  1163     0043  1507               	bsf	7,2	;volatile
  1164     0044  2848               	goto	u374
  1165     0045                     u360:
  1166     0045  1283               	bcf	3,5	;RP0=0, select bank0
  1167     0046  1303               	bcf	3,6	;RP1=0, select bank0
  1168     0047  1107               	bcf	7,2	;volatile
  1169     0048                     u374:
  1170     0048                     l1032:
  1171                           
  1172                           ;main.c: 125:                 tInicio += 500;
  1173     0048  30F4               	movlw	244
  1174     0049  07A0               	addwf	_tInicio,f
  1175     004A  1803               	skipnc
  1176     004B  0AA1               	incf	_tInicio+1,f
  1177     004C  3001               	movlw	1
  1178     004D  07A1               	addwf	_tInicio+1,f
  1179     004E  28AB               	goto	l102
  1180     004F                     l95:	
  1181                           ;main.c: 129:         case E_FUNCIONANDO:
  1182                           
  1183                           
  1184                           ;main.c: 130:             if(PORTAbits.RA5 == 1){
  1185     004F  1E85               	btfss	5,5	;volatile
  1186     0050  2852               	goto	u381
  1187     0051  2853               	goto	u380
  1188     0052                     u381:
  1189     0052  2856               	goto	l96
  1190     0053                     u380:
  1191     0053                     l1034:
  1192                           
  1193                           ;main.c: 131:                 PORTCbits.RC4 = 1;
  1194     0053  1607               	bsf	7,4	;volatile
  1195                           
  1196                           ;main.c: 132:                 error = 1;
  1197     0054  01F0               	clrf	_error
  1198     0055  0AF0               	incf	_error,f
  1199     0056                     l96:	
  1200                           ;main.c: 133:             }
  1201                           
  1202                           
  1203                           ;main.c: 134:             if(PORTAbits.RA6 == 0){
  1204     0056  1B05               	btfsc	5,6	;volatile
  1205     0057  2859               	goto	u391
  1206     0058  285A               	goto	u390
  1207     0059                     u391:
  1208     0059  285D               	goto	l1038
  1209     005A                     u390:
  1210     005A                     l1036:
  1211                           
  1212                           ;main.c: 135:                 PORTCbits.RC5 = 1;
  1213     005A  1687               	bsf	7,5	;volatile
  1214                           
  1215                           ;main.c: 136:                 error = 1;
  1216     005B  01F0               	clrf	_error
  1217     005C  0AF0               	incf	_error,f
  1218     005D                     l1038:
  1219                           
  1220                           ;main.c: 138:             if(error == 1){
  1221     005D  0370               	decf	_error,w
  1222     005E  1D03               	btfss	3,2
  1223     005F  2861               	goto	u401
  1224     0060  2862               	goto	u400
  1225     0061                     u401:
  1226     0061  28AB               	goto	l102
  1227     0062                     u400:
  1228     0062                     l1040:
  1229                           
  1230                           ;main.c: 139:                 PORTCbits.RC3 = 1;
  1231     0062  1587               	bsf	7,3	;volatile
  1232                           
  1233                           ;main.c: 140:                 PORTCbits.RC7 = 1;
  1234     0063  1787               	bsf	7,7	;volatile
  1235     0064                     l1042:
  1236                           
  1237                           ;main.c: 141:                 tInicio = tickRead();
  1238     0064  120A  118A  2149  120A  118A  	fcall	_tickRead
  1239     0069  0879               	movf	?_tickRead+1,w
  1240     006A  1283               	bcf	3,5	;RP0=0, select bank0
  1241     006B  1303               	bcf	3,6	;RP1=0, select bank0
  1242     006C  00A1               	movwf	_tInicio+1
  1243     006D  0878               	movf	?_tickRead,w
  1244     006E  00A0               	movwf	_tInicio
  1245     006F                     l1044:
  1246                           
  1247                           ;main.c: 142:                 estadoActual = E_ERROR ;
  1248     006F  3002               	movlw	2
  1249     0070  00F1               	movwf	_estadoActual
  1250     0071  28AB               	goto	l102
  1251     0072                     l99:	
  1252                           ;main.c: 146:         case E_ERROR:
  1253                           
  1254                           
  1255                           ;main.c: 147:             if(PORTAbits.RA7 == 0){
  1256     0072  1B85               	btfsc	5,7	;volatile
  1257     0073  2875               	goto	u411
  1258     0074  2876               	goto	u410
  1259     0075                     u411:
  1260     0075  2877               	goto	l1048
  1261     0076                     u410:
  1262     0076                     l1046:
  1263                           
  1264                           ;main.c: 148:                 PORTCbits.RC7 = 0;
  1265     0076  1387               	bcf	7,7	;volatile
  1266     0077                     l1048:
  1267                           
  1268                           ;main.c: 150:             if(tickRead() - tInicio >= 1000){
  1269     0077  120A  118A  2149  120A  118A  	fcall	_tickRead
  1270     007C  1283               	bcf	3,5	;RP0=0, select bank0
  1271     007D  1303               	bcf	3,6	;RP1=0, select bank0
  1272     007E  0820               	movf	_tInicio,w
  1273     007F  0278               	subwf	?_tickRead,w
  1274     0080  00A6               	movwf	??_ActualizarMEF
  1275     0081  0821               	movf	_tInicio+1,w
  1276     0082  1C03               	skipc
  1277     0083  0A21               	incf	_tInicio+1,w
  1278     0084  0279               	subwf	?_tickRead+1,w
  1279     0085  00A7               	movwf	??_ActualizarMEF+1
  1280     0086  3003               	movlw	3
  1281     0087  0227               	subwf	??_ActualizarMEF+1,w
  1282     0088  30E8               	movlw	232
  1283     0089  1903               	skipnz
  1284     008A  0226               	subwf	??_ActualizarMEF,w
  1285     008B  1C03               	skipc
  1286     008C  288E               	goto	u421
  1287     008D  288F               	goto	u420
  1288     008E                     u421:
  1289     008E  28AB               	goto	l102
  1290     008F                     u420:
  1291     008F                     l1050:
  1292                           
  1293                           ;main.c: 151:                 PORTCbits.RC3 = 0;
  1294     008F  1187               	bcf	7,3	;volatile
  1295                           
  1296                           ;main.c: 152:                 PORTCbits.RC4 = 0;
  1297     0090  1207               	bcf	7,4	;volatile
  1298                           
  1299                           ;main.c: 153:                 PORTCbits.RC5 = 0;
  1300     0091  1287               	bcf	7,5	;volatile
  1301     0092                     l1052:
  1302                           
  1303                           ;main.c: 154:                 error = 0;
  1304     0092  01F0               	clrf	_error
  1305     0093                     l1054:
  1306                           
  1307                           ;main.c: 155:                 estadoActual = E_FUNCIONANDO;
  1308     0093  01F1               	clrf	_estadoActual
  1309     0094  0AF1               	incf	_estadoActual,f
  1310     0095  28AB               	goto	l102
  1311     0096                     l1058:
  1312     0096  0871               	movf	_estadoActual,w
  1313     0097  1283               	bcf	3,5	;RP0=0, select bank0
  1314     0098  1303               	bcf	3,6	;RP1=0, select bank0
  1315     0099  00A6               	movwf	??_ActualizarMEF
  1316     009A  01A7               	clrf	??_ActualizarMEF+1
  1317                           
  1318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1319                           ; Switch size 1, requested type "simple"
  1320                           ; Number of cases is 1, Range of values is 0 to 0
  1321                           ; switch strategies available:
  1322                           ; Name         Instructions Cycles
  1323                           ; simple_byte            4     3 (average)
  1324                           ; direct_byte           11     8 (fixed)
  1325                           ; jumptable            260     6 (fixed)
  1326                           ;	Chosen strategy is simple_byte
  1327     009B  0827               	movf	??_ActualizarMEF+1,w
  1328     009C  3A00               	xorlw	0	; case 0
  1329     009D  1903               	skipnz
  1330     009E  28A0               	goto	l1098
  1331     009F  28AB               	goto	l102
  1332     00A0                     l1098:
  1333                           
  1334                           ; Switch size 1, requested type "simple"
  1335                           ; Number of cases is 3, Range of values is 0 to 2
  1336                           ; switch strategies available:
  1337                           ; Name         Instructions Cycles
  1338                           ; simple_byte           10     6 (average)
  1339                           ; direct_byte           17     8 (fixed)
  1340                           ; jumptable            260     6 (fixed)
  1341                           ;	Chosen strategy is simple_byte
  1342     00A0  0826               	movf	??_ActualizarMEF,w
  1343     00A1  3A00               	xorlw	0	; case 0
  1344     00A2  1903               	skipnz
  1345     00A3  281F               	goto	l91
  1346     00A4  3A01               	xorlw	1	; case 1
  1347     00A5  1903               	skipnz
  1348     00A6  284F               	goto	l95
  1349     00A7  3A03               	xorlw	3	; case 2
  1350     00A8  1903               	skipnz
  1351     00A9  2872               	goto	l99
  1352     00AA  28AB               	goto	l102
  1353     00AB                     l102:
  1354     00AB  0008               	return
  1355     00AC                     __end_of_ActualizarMEF:
  1356                           
  1357                           	psect	text6
  1358     0149                     __ptext6:	
  1359 ;; *************** function _tickRead *****************
  1360 ;; Defined at:
  1361 ;;		line 62 in file "tick.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  aux             2    0[BANK0 ] unsigned int 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  2    3[COMMON] unsigned int 
  1368 ;; Registers used:
  1369 ;;		wreg
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         2       0       0       0       0
  1376 ;;      Locals:         0       2       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         2       2       0       0       0
  1379 ;;Total ram usage:        4 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_InicializarMEF
  1386 ;;		_ActualizarMEF
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390     0149                     _tickRead:	
  1391                           ;psect for function _tickRead
  1392                           
  1393     0149                     l1010:	
  1394                           ;incstack = 0
  1395                           ; Regs used in _tickRead: [wreg]
  1396                           
  1397                           
  1398                           ;tick.c: 63:     tick_t aux;;tick.c: 64:     GIE = 0;
  1399     0149  138B               	bcf	11,7	;volatile
  1400     014A                     l1012:
  1401                           
  1402                           ;tick.c: 65:     aux = tickCounter;
  1403     014A  1283               	bcf	3,5	;RP0=0, select bank0
  1404     014B  1303               	bcf	3,6	;RP1=0, select bank0
  1405     014C  0823               	movf	_tickCounter+1,w	;volatile
  1406     014D  00A5               	movwf	tickRead@aux+1
  1407     014E  0822               	movf	_tickCounter,w	;volatile
  1408     014F  00A4               	movwf	tickRead@aux
  1409     0150                     l1014:
  1410                           
  1411                           ;tick.c: 66:     GIE = 1;
  1412     0150  178B               	bsf	11,7	;volatile
  1413                           
  1414                           ;tick.c: 67:     return aux;
  1415     0151  0825               	movf	tickRead@aux+1,w
  1416     0152  00F9               	movwf	?_tickRead+1
  1417     0153  0824               	movf	tickRead@aux,w
  1418     0154  00F8               	movwf	?_tickRead
  1419     0155                     l120:
  1420     0155  0008               	return
  1421     0156                     __end_of_tickRead:
  1422                           
  1423                           	psect	text7
  1424     00AC                     __ptext7:	
  1425 ;; *************** function _isr *****************
  1426 ;; Defined at:
  1427 ;;		line 33 in file "interrupts.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0
  1443 ;;      Temps:          3       0       0       0       0
  1444 ;;      Totals:         3       0       0       0       0
  1445 ;;Total ram usage:        3 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; This function calls:
  1448 ;;		Nothing
  1449 ;; This function is called by:
  1450 ;;		Interrupt level 1
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454     00AC                     _isr:	
  1455                           ;psect for function _isr
  1456                           
  1457     00AC                     i1l958:
  1458                           
  1459                           ;interrupts.c: 41:     TMR0IF = 0;
  1460     00AC  110B               	bcf	11,2	;volatile
  1461     00AD                     i1l960:
  1462                           
  1463                           ;interrupts.c: 42:     TMR0 += 7;
  1464     00AD  3007               	movlw	7
  1465     00AE  00F5               	movwf	??_isr
  1466     00AF  0875               	movf	??_isr,w
  1467     00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1468     00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1469     00B2  0781               	addwf	1,f	;volatile
  1470     00B3                     i1l962:
  1471                           
  1472                           ;interrupts.c: 43:     tickCounter++;
  1473     00B3  3001               	movlw	1
  1474     00B4  07A2               	addwf	_tickCounter,f	;volatile
  1475     00B5  1803               	skipnc
  1476     00B6  0AA3               	incf	_tickCounter+1,f	;volatile
  1477     00B7  3000               	movlw	0
  1478     00B8  07A3               	addwf	_tickCounter+1,f	;volatile
  1479     00B9                     i1l964:
  1480                           
  1481                           ;interrupts.c: 44:     contador50HZ++;
  1482     00B9  3001               	movlw	1
  1483     00BA  00F5               	movwf	??_isr
  1484     00BB  0875               	movf	??_isr,w
  1485     00BC  07F2               	addwf	_contador50HZ,f
  1486                           
  1487                           ;interrupts.c: 45:     if(contador50HZ >= 20){
  1488     00BD  3014               	movlw	20
  1489     00BE  0272               	subwf	_contador50HZ,w
  1490     00BF  1C03               	skipc
  1491     00C0  28C2               	goto	u28_21
  1492     00C1  28C3               	goto	u28_20
  1493     00C2                     u28_21:
  1494     00C2  28DE               	goto	i1l58
  1495     00C3                     u28_20:
  1496     00C3                     i1l966:
  1497                           
  1498                           ;interrupts.c: 46:         PORTCbits.RC0 = !PORTCbits.RC0;
  1499     00C3  1003               	clrc
  1500     00C4  1C07               	btfss	7,0	;volatile
  1501     00C5  1403               	setc
  1502     00C6  1803               	btfsc	3,0
  1503     00C7  28C9               	goto	u29_21
  1504     00C8  28CD               	goto	u29_20
  1505     00C9                     u29_21:
  1506     00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1507     00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1508     00CB  1407               	bsf	7,0	;volatile
  1509     00CC  28D0               	goto	u30_24
  1510     00CD                     u29_20:
  1511     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1512     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1513     00CF  1007               	bcf	7,0	;volatile
  1514     00D0                     u30_24:
  1515                           
  1516                           ;interrupts.c: 47:         PORTCbits.RC1 = !PORTCbits.RC0;
  1517     00D0  1003               	clrc
  1518     00D1  1C07               	btfss	7,0	;volatile
  1519     00D2  1403               	setc
  1520     00D3  1803               	btfsc	3,0
  1521     00D4  28D6               	goto	u31_21
  1522     00D5  28DA               	goto	u31_20
  1523     00D6                     u31_21:
  1524     00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1525     00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1526     00D8  1487               	bsf	7,1	;volatile
  1527     00D9  28DD               	goto	u32_24
  1528     00DA                     u31_20:
  1529     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1530     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1531     00DC  1087               	bcf	7,1	;volatile
  1532     00DD                     u32_24:
  1533     00DD                     i1l968:
  1534                           
  1535                           ;interrupts.c: 48:         contador50HZ = 0;
  1536     00DD  01F2               	clrf	_contador50HZ
  1537     00DE                     i1l58:
  1538     00DE  0877               	movf	??_isr+2,w
  1539     00DF  008A               	movwf	10
  1540     00E0  0E76               	swapf	??_isr+1,w
  1541     00E1  0083               	movwf	3
  1542     00E2  0EFE               	swapf	btemp,f
  1543     00E3  0E7E               	swapf	btemp,w
  1544     00E4  0009               	retfie
  1545     00E5                     __end_of_isr:
  1546     007E                     btemp	set	126	;btemp
  1547     007E                     wtemp0	set	126
  1548                           
  1549                           	psect	intentry
  1550     0004                     __pintentry:	
  1551                           ;incstack = 0
  1552                           ; Regs used in _isr: [wreg+status,2+status,0]
  1553                           
  1554     0004                     interrupt_function:
  1555     007E                     saved_w	set	btemp
  1556     0004  00FE               	movwf	btemp
  1557     0005  0E03               	swapf	3,w
  1558     0006  00F6               	movwf	??_isr+1
  1559     0007  080A               	movf	10,w
  1560     0008  00F7               	movwf	??_isr+2
  1561     0009  120A  118A  28AC   	ljmp	_isr
  1562                           
  1563                           	psect	config
  1564                           
  1565                           ;Config register CONFIG1 @ 0x2007
  1566                           ;	Oscillator Selection bits
  1567                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1568                           ;	Watchdog Timer Enable bit
  1569                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1570                           ;	Power-up Timer Enable bit
  1571                           ;	PWRTE = OFF, PWRT disabled
  1572                           ;	RE3/MCLR pin function select bit
  1573                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1574                           ;	Code Protection bit
  1575                           ;	CP = OFF, Program memory code protection is disabled
  1576                           ;	Data Code Protection bit
  1577                           ;	CPD = OFF, Data memory code protection is disabled
  1578                           ;	Brown Out Reset Selection bits
  1579                           ;	BOREN = OFF, BOR disabled
  1580                           ;	Internal External Switchover bit
  1581                           ;	IESO = ON, Internal/External Switchover mode is enabled
  1582                           ;	Fail-Safe Clock Monitor Enabled bit
  1583                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1584                           ;	Low Voltage Programming Enable bit
  1585                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1586                           ;	In-Circuit Debugger Mode bit
  1587                           ;	DEBUG = 0x1, unprogrammed default
  1588     2007                     	org	8199
  1589     2007  2CF4               	dw	11508
  1590                           
  1591                           ;Config register CONFIG2 @ 0x2008
  1592                           ;	Brown-out Reset Selection bit
  1593                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  1594                           ;	Flash Program Memory Self Write Enable bits
  1595                           ;	WRT = OFF, Write protection off
  1596     2008                     	org	8200
  1597     2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      4       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_appInit
    _InicializarMEF->_tickRead
    _ActualizarMEF->_tickRead

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ActualizarMEF
    _InicializarMEF->_tickRead
    _ActualizarMEF->_tickRead

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      68
                      _ActualizarMEF
                     _InicializarMEF
                            _appInit
 ---------------------------------------------------------------------------------
 (1) _appInit                                              2     2      0       0
                                              3 COMMON     2     2      0
                            _adcInit
                           _tickInit
 ---------------------------------------------------------------------------------
 (2) _tickInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InicializarMEF                                       0     0      0      34
                           _tickRead
 ---------------------------------------------------------------------------------
 (1) _ActualizarMEF                                        2     2      0      34
                                              2 BANK0      2     2      0
                           _tickRead
 ---------------------------------------------------------------------------------
 (2) _tickRead                                             4     2      2      34
                                              3 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ActualizarMEF
     _tickRead
   _InicializarMEF
     _tickRead
   _appInit
     _adcInit
     _tickInit

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Sep 19 15:46:55 2023

                     l29 013B                       l91 001F                       l95 004F  
                     l87 0148                       l96 0056                       l99 0072  
                    l102 00AB                      l120 0155                      l117 015F  
                    l144 010E                      l736 0129                      l744 0156  
                    l760 00E5                      l746 015A                      l770 00EF  
                    l762 00E9                      l748 015E                      l780 00F4  
                    l772 00F0                      l764 00EC                      l790 0101  
                    l782 00F5                      l774 00F1                      l766 00ED  
                    l792 010A                      l784 00F6                      l776 00F2  
                    l768 00EE                      l794 010D                      l786 00F7  
                    l778 00F3                      l788 00FC                      _GIE 005F  
                    u400 0062                      u401 0061                      u410 0076  
                    u330 0023                      u411 0075                      u331 0022  
                    u420 008F                      u340 0027                      u421 008E  
                    u341 0026                      u350 003B                      u351 003A  
                    u360 0045                      u361 0041                      u355 0037  
                    u380 0053                      u381 0052                      u437 0105  
                    u390 005A                      u374 0048                      u391 0059  
                    _PSA 040B                      _isr 00AC                     l1010 0149  
                   l1012 014A                     l1020 013D                     l1014 0150  
                   l1030 003B                     l1022 001E                     l1040 0062  
                   l1032 0048                     l1024 0023                     l1050 008F  
                   l1042 0064                     l1034 0053                     l1026 0027  
                   l1018 013C                     l1052 0092                     l1044 006F  
                   l1036 005A                     l1028 002A                     l1054 0093  
                   l1046 0076                     l1038 005D                     l1070 011D  
                   l1048 0077                     l1072 011E                     l1064 010F  
                   l1058 0096                     l1074 011F                     l1066 0119  
                   l1076 0120                     l1068 011C                     l1098 00A0  
                   _ADFM 04FF                     ?_isr 0075                     _ADON 00F8  
                   _ANS0 0C40                     _T0CS 040D                     i1l58 00DE  
                   _TMR0 0001           _InicializarMEF 013C                     _main 010F  
                   btemp 007E                     start 000C                    ??_isr 0075  
                  _ADCS0 00FE                    _ADCS1 00FF                    ?_main 0075  
        __end_of_adcInit 013C                    _ANSEL 0188                    i1l960 00AD  
                  _FVREN 0C28                    i1l962 00B3                    i1l964 00B9  
                  i1l966 00C3                    i1l958 00AC                    i1l968 00DD  
                  _VCFG0 04FC                    _VCFG1 04FD                    u30_24 00D0  
                  u31_20 00DA                    u31_21 00D6                    u32_24 00DD  
                  u28_20 00C3                    u28_21 00C2                    u29_20 00CD  
                  u29_21 00C9          __end_of_appInit 010F                    _error 0070  
 __end_of_InicializarMEF 0149                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0129  
                 ??_main 007A                   _CCP1IE 0462                   _ADRESH 001E  
                 _ADRESL 009E          ?_InicializarMEF 0075                   _ANSELH 0189  
                 _TMR0IE 005D                   _TMR0IF 005A                ??_adcInit 0078  
      adcRead_mV@nAdcRef 0073                ??_appInit 0078         __end_of_tickInit 0160  
       __end_of_tickRead 0156                   saved_w 007E  __end_of__initialization 001A  
         __pcstackCOMMON 0075           _OPTION_REGbits 0081               __pbssBANK0 0020  
             __pmaintext 010F               __pintentry 0004              tickRead@aux 0024  
              ?_tickInit 0075                ?_tickRead 0078                  _adcInit 0129  
                _appInit 00E5                  _tInicio 0020                  __ptext1 00E5  
                __ptext2 0156                  __ptext3 0129                  __ptext4 013C  
                __ptext5 001E                  __ptext6 0149                  __ptext7 00AC  
       ??_InicializarMEF 007A            _ActualizarMEF 001E     end_of_initialization 001A  
             ??_tickInit 0078               ??_tickRead 007A                _PORTAbits 0005  
              _PORTCbits 0007                _TRISAbits 0085                _TRISCbits 0087  
         ?_ActualizarMEF 0075             _contador50HZ 0072      start_initialization 000F  
            __end_of_isr 00E5             _estadoActual 0071          ??_ActualizarMEF 0026  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0024  
               ?_adcInit 0075                 ?_appInit 0075        interrupt_function 0004  
               _GO_nDONE 00F9               _ADCON0bits 001F                 _tickInit 0156  
               _tickRead 0149              _tickCounter 0022                 intlevel1 0000  
  __end_of_ActualizarMEF 00AC  
